/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package internal

import (
	"crypto/rsa"
	"fmt"
	"github.com/jsfan/hello-neighbour/internal/session"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter(jwtKeys *rsa.PrivateKey) *mux.Router {
	session.SetSigningKey(jwtKeys)
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v0/",
		Index,
	},

	Route{
		"GetQuestions",
		strings.ToUpper("Get"),
		"/v0/question",
		GetQuestions,
	},

	Route{
		"GetUsers",
		strings.ToUpper("Get"),
		"/v0/user",
		GetUsers,
	},

	Route{
		"UpdateChurchActivate",
		strings.ToUpper("Patch"),
		"/v0/church/{churchUuid}/activate",
		UpdateChurchActivate,
	},

	Route{
		"AddUser",
		strings.ToUpper("Post"),
		"/v0/user",
		AddUser,
	},

	Route{
		"AddQuestion",
		strings.ToUpper("Post"),
		"/v0/church/{churchUuid}/question",
		AddQuestion,
	},

	Route{
		"DeleteChurch",
		strings.ToUpper("Delete"),
		"/v0/church/{churchUuid}",
		DeleteChurch,
	},

	Route{
		"DeleteChurchMember",
		strings.ToUpper("Delete"),
		"/v0/church/{churchUuid}/user/{userUuid}",
		DeleteChurchMember,
	},

	Route{
		"DeleteQuestion",
		strings.ToUpper("Delete"),
		"/v0/question/{questionUuid}",
		DeleteQuestion,
	},

	Route{
		"EditChurch",
		strings.ToUpper("Put"),
		"/v0/church/{churchUuid}",
		EditChurch,
	},

	Route{
		"GetChurch",
		strings.ToUpper("Get"),
		"/v0/church/{churchUuid}",
		GetChurch,
	},

	Route{
		"GetChurchMembers",
		strings.ToUpper("Get"),
		"/v0/church/{churchUuid}/user",
		GetChurchMembers,
	},

	Route{
		"GetChurchQuestions",
		strings.ToUpper("Get"),
		"/v0/church/{churchUuid}/question",
		GetChurchQuestions,
	},

	Route{
		"GetMatchGroups",
		strings.ToUpper("Get"),
		"/v0/church/{churchUuid}/matchgroup",
		GetMatchGroups,
	},

	Route{
		"GetQuestion",
		strings.ToUpper("Get"),
		"/v0/question/{questionUuid}",
		GetQuestion,
	},

	Route{
		"ModifyQuestion",
		strings.ToUpper("Put"),
		"/v0/question/{questionUuid}",
		ModifyQuestion,
	},

	Route{
		"SendInvite",
		strings.ToUpper("Post"),
		"/v0/church/{churchUuid}/invite",
		SendInvite,
	},

	Route{
		"AcceptInvite",
		strings.ToUpper("Patch"),
		"/v0/register/{userUuid}",
		AcceptInvite,
	},

	Route{
		"AddChurch",
		strings.ToUpper("Post"),
		"/v0/church",
		AddChurch,
	},

	Route{
		"AddContactMethod",
		strings.ToUpper("Post"),
		"/v0/user/{userUuid}/contactmethod",
		AddContactMethod,
	},

	Route{
		"DeleteContactMethod",
		strings.ToUpper("Delete"),
		"/v0/user/{userUuid}/contactmethod/{methodUuid}",
		DeleteContactMethod,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/v0/user/{userUuid}",
		DeleteUser,
	},

	Route{
		"EditUser",
		strings.ToUpper("Put"),
		"/v0/user/{userUuid}",
		EditUser,
	},

	Route{
		"GetChurches",
		strings.ToUpper("Get"),
		"/v0/church",
		GetChurches,
	},

	Route{
		"GetMatchGroup",
		strings.ToUpper("Get"),
		"/v0/user/{userUuid}/matchGroup",
		GetMatchGroup,
	},

	Route{
		"GetMessages",
		strings.ToUpper("Get"),
		"/v0/user/{userUuid}/matchgroup/{groupUuid}/bulletin",
		GetMessages,
	},

	Route{
		"GetUser",
		strings.ToUpper("Get"),
		"/v0/user/{userUuid}",
		GetUser,
	},

	Route{
		"LoginUser",
		strings.ToUpper("Get"),
		"/v0/login",
		LoginUser,
	},

	Route{
		"SendMessage",
		strings.ToUpper("Post"),
		"/v0/user/{userUuid}/matchgroup/{groupUuid}/bulletin",
		SendMessage,
	},

	Route{
		"UpdateContactMethod",
		strings.ToUpper("Put"),
		"/v0/user/{userUuid}/contactmethod/{methodUuid}",
		UpdateContactMethod,
	},

	Route{
		"UserProfile",
		strings.ToUpper("Get"),
		"/v0/profile",
		UserProfile,
	},
}
