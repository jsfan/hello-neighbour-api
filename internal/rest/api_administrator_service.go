/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package rest

import (
	"context"
	"net/http"
	"errors"
)

// AdministratorApiService is a service that implements the logic for the AdministratorApiServicer
// This service should implement the business logic for every endpoint for the AdministratorApi API.
// Include any external packages or services that will be required by this service.
type AdministratorApiService struct {
}

// NewAdministratorApiService creates a default api service
func NewAdministratorApiService() AdministratorApiServicer {
	return &AdministratorApiService{}
}

// GetQuestions - Retrieve all questions
func (s *AdministratorApiService) GetQuestions(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetQuestions with the required logic for this service method.
	// Add api_administrator_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Question{}) or use other options such as http.Ok ...
	//return Response(200, Question{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetQuestions method not implemented")
}

// GetUsers - Retrieve all users
func (s *AdministratorApiService) GetUsers(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetUsers with the required logic for this service method.
	// Add api_administrator_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []User{}) or use other options such as http.Ok ...
	//return Response(200, []User{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUsers method not implemented")
}

// UpdateChurchActivate - Activate or deactivate church
func (s *AdministratorApiService) UpdateChurchActivate(ctx context.Context, churchUUID string, isActive InlineObject) (ImplResponse, error) {
	// TODO - update UpdateChurchActivate with the required logic for this service method.
	// Add api_administrator_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateChurchActivate method not implemented")
}
