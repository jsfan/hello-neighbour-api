/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package rest

type UserInAllOf struct {
	DateOfBirth string `json:"date_of_birth"`

	Password string `json:"password"`
}

// AssertUserInAllOfRequired checks if the required fields are not zero-ed
func AssertUserInAllOfRequired(obj UserInAllOf) error {
	elements := map[string]interface{}{
		"date_of_birth": obj.DateOfBirth,
		"password":      obj.Password,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUserInAllOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserInAllOf (e.g. [][]UserInAllOf), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserInAllOfRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserInAllOf, ok := obj.(UserInAllOf)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserInAllOfRequired(aUserInAllOf)
	})
}
