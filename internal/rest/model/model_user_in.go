// Code generated by OpenAPI Generator (https://openapi-generator.tech). DO NOT EDIT.
/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package model

import "github.com/jsfan/hello-neighbour-api/internal/rest/common"

type UserIn struct {
	Email string `json:"email"`

	FirstName string `json:"first_name"`

	LastName string `json:"last_name"`

	Gender string `json:"gender,omitempty"`

	Description string `json:"description,omitempty"`

	Church string `json:"church,omitempty"`

	Role string `json:"role,omitempty"`

	DateOfBirth string `json:"date_of_birth"`

	Password string `json:"password"`
}

// AssertUserInRequired checks if the required fields are not zero-ed
func AssertUserInRequired(obj UserIn) error {
	elements := map[string]interface{}{
		"email":         obj.Email,
		"first_name":    obj.FirstName,
		"last_name":     obj.LastName,
		"date_of_birth": obj.DateOfBirth,
		"password":      obj.Password,
	}
	for name, el := range elements {
		if isZero := common.IsZeroValue(el); isZero {
			return &common.RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUserInRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserIn (e.g. [][]UserIn), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserInRequired(objSlice interface{}) error {
	return common.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserIn, ok := obj.(UserIn)
		if !ok {
			return common.ErrTypeAssertionError
		}
		return AssertUserInRequired(aUserIn)
	})
}
