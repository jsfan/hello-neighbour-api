/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package service

import (
	"context"
	"errors"
	"net/http"

	"github.com/jsfan/hello-neighbour-api/internal/session"

	"github.com/golang/glog"
	"github.com/google/uuid"
	"github.com/jsfan/hello-neighbour-api/internal/config"
	"github.com/jsfan/hello-neighbour-api/internal/interfaces"

	"github.com/jsfan/hello-neighbour-api/internal/rest"
	"github.com/jsfan/hello-neighbour-api/internal/rest/common"
	"github.com/jsfan/hello-neighbour-api/internal/rest/model"
)

// MemberApiService is a service that implements the logic for the MemberApiServicer
// This service should implement the business logic for every endpoint for the MemberApi API.
// Include any external packages or services that will be required by this service.
type MemberApiService struct {
}

// NewMemberApiService creates a default api service
func NewMemberApiService() rest.MemberApiServicer {
	return &MemberApiService{}
}

// AcceptInvite - Accept invite
func (s *MemberApiService) AcceptInvite(ctx context.Context, userUUID string, body model.UserIn) (common.ImplResponse, error) {
	// TODO - update AcceptInvite with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("AcceptInvite method not implemented")
}

// AddChurch - Request new church
func (s *MemberApiService) AddChurch(ctx context.Context, churchIn model.ChurchIn) (common.ImplResponse, error) {
	userSession := ctx.Value(config.SessionKey).(*config.UserSession)
	if userSession.ChurchUUID != nil {
		return common.Response(http.StatusBadRequest, map[string]interface{}{"error": "You cannot request a new church if you currently belong to one.", "code": http.StatusBadRequest}), nil
	}

	store := ctx.Value(config.MasterStore).(interfaces.DataInterface)

	church, err := store.AddChurch(ctx, &churchIn)
	if err != nil {
		glog.Errorf("Database error: %+v", err)
		return common.Response(http.StatusInternalServerError, map[string]interface{}{"error": "", "code": http.StatusInternalServerError}), nil
	}

	churchPubId, err := uuid.Parse(church.PubId)
	if err != nil {
		// this shouldn't happen
		glog.Errorf("Cannot parse pub ID of church %s: %+v", church.PubId, err)
	}
	if err = store.PromoteToLeader(ctx, userSession.UserUUID, &churchPubId); err != nil {
		glog.Errorf("Problem promoting user %s to leader of church %s: %+v.", userSession.UserUUID.String(), churchPubId.String(), err)
		return common.Response(http.StatusInternalServerError, map[string]interface{}{"error": "", "code": http.StatusInternalServerError}), nil
	}
	glog.Infof("Church request sent: %+v", church.PubId)

	return common.Response(http.StatusCreated, church), nil
}

// AddContactMethod - Add a contact method to a user profile
func (s *MemberApiService) AddContactMethod(ctx context.Context, userUUID string, body model.ContactMethodIn) (common.ImplResponse, error) {
	// TODO - update AddContactMethod with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, ContactMethod{}) or use other options such as http.Ok ...
	//return Response(201, ContactMethod{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("AddContactMethod method not implemented")
}

// DeleteContactMethod - Delete a contact method from a user profile
func (s *MemberApiService) DeleteContactMethod(ctx context.Context, userUUID string, methodUUID string) (common.ImplResponse, error) {
	// TODO - update DeleteContactMethod with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("DeleteContactMethod method not implemented")
}

// DeleteUser - Delete user
func (s *MemberApiService) DeleteUser(ctx context.Context, userUUIDStr string) (common.ImplResponse, error) {
	userUUID, err := uuid.Parse(userUUIDStr)
	if err != nil {
		return common.Response(http.StatusBadRequest, map[string]interface{}{"message": "Invalid user UUID.", "code": http.StatusBadRequest}), nil
	}

	userSession := ctx.Value(config.SessionKey).(*config.UserSession)
	currentUserUUID := userSession.UserUUID
	if (&userUUID != currentUserUUID) && (userSession.Role != "admin") {
		return common.Response(http.StatusForbidden, map[string]interface{}{"message": "You cannot delete that user.", "code": http.StatusForbidden}), nil
	}

	store := ctx.Value(config.MasterStore).(interfaces.DataInterface)

	if err := store.DeleteUser(ctx, &userUUID); err != nil {
		glog.Errorf("Could not delete user %s: %+v", currentUserUUID.String(), err)
		return common.Response(http.StatusInternalServerError, map[string]interface{}{"message": "", "code": http.StatusInternalServerError}), nil
	}
	glog.Infof("User %s was deleted.", currentUserUUID.String())

	return common.Response(http.StatusNoContent, nil), nil
}

// EditUser - Update user
func (s *MemberApiService) EditUser(ctx context.Context, userUUID string, body model.UserIn) (common.ImplResponse, error) {
	// TODO - update EditUser with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("EditUser method not implemented")
}

// GetChurches - Retrieve all signed up churches
func (s *MemberApiService) GetChurches(ctx context.Context) (common.ImplResponse, error) {
	// TODO - update GetChurches with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ChurchPublic{}) or use other options such as http.Ok ...
	//return Response(200, ChurchPublic{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("GetChurches method not implemented")
}

// GetMatchGroup - Retrieve current match group
func (s *MemberApiService) GetMatchGroup(ctx context.Context, userUUID string) (common.ImplResponse, error) {
	// TODO - update GetMatchGroup with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Group{}) or use other options such as http.Ok ...
	//return Response(200, Group{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("GetMatchGroup method not implemented")
}

// GetMessages - Retrieve all messages
func (s *MemberApiService) GetMessages(ctx context.Context, userUUID string, groupUUID string) (common.ImplResponse, error) {
	// TODO - update GetMessages with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Message{}) or use other options such as http.Ok ...
	//return Response(200, []Message{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("GetMessages method not implemented")
}

// GetUser - Retrieve user details
func (s *MemberApiService) GetUser(ctx context.Context, userUUID string) (common.ImplResponse, error) {
	// TODO - update GetUser with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("GetUser method not implemented")
}

// LoginUser - Login user
func (s *MemberApiService) LoginUser(ctx context.Context) (common.ImplResponse, error) {
	userSession := ctx.Value(config.SessionKey).(*config.UserSession)
	jwtRef := session.NewJWT()
	err := jwtRef.Build(userSession)
	if err != nil {
		glog.Errorf("Could not build JWT: %+v", err)
		return common.Response(http.StatusInternalServerError, map[string]interface{}{"message": "Internal server error", "code": http.StatusInternalServerError}), nil
	}
	successResp := model.Jwt{
		Jwt: jwtRef.GetRaw(),
	}

	return common.Response(http.StatusOK, successResp), nil
}

// SendMessage - Send message
func (s *MemberApiService) SendMessage(ctx context.Context, userUUID string, groupUUID string, body model.MessageIn) (common.ImplResponse, error) {
	// TODO - update SendMessage with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, MessageIn{}) or use other options such as http.Ok ...
	//return Response(201, MessageIn{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("SendMessage method not implemented")
}

// UpdateContactMethod - Update a contact method for a user
func (s *MemberApiService) UpdateContactMethod(ctx context.Context, userUUID string, methodUUID string, body model.ContactMethodIn) (common.ImplResponse, error) {
	// TODO - update UpdateContactMethod with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ContactMethod{}) or use other options such as http.Ok ...
	//return Response(200, ContactMethod{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(403, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(404, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("UpdateContactMethod method not implemented")
}

// UserProfile - Logged in user&#39;s UUID and church UUID
func (s *MemberApiService) UserProfile(ctx context.Context) (common.ImplResponse, error) {
	// TODO - update UserProfile with the required logic for this service method.
	// Add api_member_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UserProfile{}) or use other options such as http.Ok ...
	//return Response(200, UserProfile{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(400, ErrorResponse{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(401, ErrorResponse{}), nil

	return common.Response(http.StatusNotImplemented, nil), errors.New("UserProfile method not implemented")
}
