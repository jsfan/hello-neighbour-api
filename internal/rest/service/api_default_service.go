/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package service

import (
	"context"
	"net/http"

	"github.com/golang/glog"
	"github.com/jsfan/hello-neighbour-api/internal/config"
	"github.com/jsfan/hello-neighbour-api/internal/interfaces"

	"github.com/jsfan/hello-neighbour-api/internal/rest"
	"github.com/jsfan/hello-neighbour-api/internal/rest/common"
	"github.com/jsfan/hello-neighbour-api/internal/rest/model"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() rest.DefaultApiServicer {
	return &DefaultApiService{}
}

// AddUser - Create new user
func (s *DefaultApiService) AddUser(ctx context.Context, userIn model.UserIn) (common.ImplResponse, error) {
	store := ctx.Value(config.MasterStore).(interfaces.DataInterface)

	user, err := store.RegisterUser(ctx, &userIn)
	if err != nil {
		glog.Errorf("Database error: %+v", err)
		return common.Response(http.StatusInternalServerError, map[string]interface{}{"message": "", "code": http.StatusInternalServerError}), nil
	}
	glog.Infof("User created: %+v", user.PubId)

	return common.Response(http.StatusCreated, user), nil
}
