/*
 * Hello Neighbour
 *
 * This is the API for the 'Hello Neighbour' project inspired from the COVID-19 Global Church Hack
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package rest

type MessageIn struct {

	Group string `json:"group"`

	User string `json:"user"`

	Sent string `json:"sent"`

	Message string `json:"message"`
}

// AssertMessageInRequired checks if the required fields are not zero-ed
func AssertMessageInRequired(obj MessageIn) error {
	elements := map[string]interface{}{
		"group": obj.Group,
		"user": obj.User,
		"sent": obj.Sent,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseMessageInRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MessageIn (e.g. [][]MessageIn), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMessageInRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMessageIn, ok := obj.(MessageIn)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMessageInRequired(aMessageIn)
	})
}
